/*! Everything above is generated by Tailwind (Preflight)
AccuTheme-Tw4 - This is the start of our stuff which all starts in src/tailwind/index.css */
/*
  Note: this file is not in a layer! It only exists at build time 
  before the layers (base, components, utilities) 
*/
@theme {
  /* 
  reminder: 
  @theme extends, 
  to replace use --[namespace]=*: initial;
  */

  /* Tailwind's built-in defaults come from: 
      https://github.com/tailwindlabs/tailwindcss/blob/next/packages/tailwindcss/theme.css 
  */
  /* Tailwind Docs - Default theme variable reference: 
      https://tailwindcss.com/docs/theme#default-theme-variable-reference 
  */

  /* Fonts */
  /* Tailwind covers font-sans, -serif, and -mono as defaults 202508 JRF */

  /* Client Brand Type Faces */
  /* TODO: Add the client's brand fonts when you start the project. Delete this comment once the fonts are added. */

  /*
  Our TypeKit is ASL-ACCU4-2025 and has Inter Variable, FF Good Headline Pro (Wide), Recursive Sans Casual Static, Recursive Mono Casual Static, and FF Nexus Serif
  https://fonts.adobe.com/my_fonts#web_projects-section
  */

  --font-inter: inter-variable, var(--font-sans);
  --font-good-headline: good-headline-web-pro, var(--font-sans);
  --font-recursive-sans: recursive-sans-casual-static, var(--font-sans);
  --font-recursive-mono: recursive-mono-casual-static, var(--font-mono);
  --font-nexus: ff-nexus-serif, var(--font-serif);

  --font-nav: var(--font-inter);
  --font-heading: good-headline-web-pro-wide, var(--font-good-headline);
  --font-code: var(--font-recursive-mono);

  /* Colors */
  /* Tailwind covers black, white, and then ~100 to ~900 for:
      red, orange, amber, yellow, lime, green, emerald, teal, cyan, 
      sky, blue, indigo, violet, purple, fuchsia, pink, rose, 
      slate, gray, zinc, neutral, stone
  */

  /* Verified Accuraty Blue 2014-2025+ #0767b1,  */
  /* Converted from Hex using Chrome DevTools and verified w oklch.com */
  --color-accuraty-blue: oklch(0.508 0.14 250);

  /* TODO: Add the client's brand colors when you start the project >> Delete this comment once the colors are added. */
  /* Client Brand Colors and Calculated Light/Dark Variants */
  /* Link to SITE / Theme Reference / Colors https://accu2025.accuraty.us/tabid/44 */
  /* Razor Script to Update for Testing, Demo, and Reference dnn/DesktopModules/RazorModules/RazorHost/Scripts/AccuTheme-Tw4--Colors.cshtml */

  /* Client Brand Colors - usually 2 to 5 */
  --color-blue: var(--color-accuraty-blue);
  /* #4f7bf1 */
  --color-amber: oklch(0.6554 0.1373 62.28);
  /* #cb7b24 */

  /* Additional Project Colors - usually 1 to 5 (most projects should have 5 to 7 total brand+project colors) */
  --color-purple: oklch(0.803 0.0875 268.56);
  /* #a7bdf8 */
  --color-green: oklch(0.5614 0.1173 165.46);
  /* #008a64 */

  /* Calculated Light/Dark Variants by Delta */
  --light-delta: 10;
  /* percent, convert 10% to 0.1 to use in oklch() */
  --light-delta-p: calc(var(--light-delta) / 100);
  /* TODO convert below to Tw4 custom variats so this is all done in one step
  /* TODO consider converting to color-mix() or oklch() 0 see Wiki Colors and Fonts */
  /* blue */
  --color-blue-lighter: hsl(from var(--color-blue) h s calc(l + calc(var(--light-delta) * 2)));
  --color-blue-light: hsl(from var(--color-blue) h s calc(l + var(--light-delta)));
  --color-blue-dark: hsl(from var(--color-blue) h s calc(l - var(--light-delta)));
  --color-blue-darker: hsl(from var(--color-blue) h s calc(l - calc(var(--light-delta) * 2)));

  /* oklch() light/dark experiment, https://developer.mozilla.org/en-US/docs/Web/CSS/color_value/oklch */
  --color-blue-lighter2: oklch(from var(--color-blue) calc(l + calc(var(--light-delta-p) * 2)) c h);
  --color-blue-light2: oklch(from var(--color-blue) calc(l + var(--light-delta-p)) c h);
  --color-blue-dark2: oklch(from var(--color-blue) calc(l - var(--light-delta-p)) c h);
  --color-blue-darker2: oklch(from var(--color-blue) calc(l - calc(var(--light-delta-p) * 2)) c h);

  /* amber */
  --color-amber-lighter: hsl(from var(--color-amber) h s calc(l + calc(var(--light-delta) * 2)));
  --color-amber-light: hsl(from var(--color-amber) h s calc(l + var(--light-delta)));
  --color-amber-dark: hsl(from var(--color-amber) h s calc(l - var(--light-delta)));
  --color-amber-darker: hsl(from var(--color-amber) h s calc(l - calc(var(--light-delta) * 2)));

  /* oklch() light/dark experiment */
  --color-amber-lighter2: oklch(from var(--color-amber) calc(l + calc(var(--light-delta-p) * 2)) c h);
  --color-amber-light2: oklch(from var(--color-amber) calc(l + var(--light-delta-p)) c h);
  --color-amber-dark2: oklch(from var(--color-amber) calc(l - var(--light-delta-p)) c h);
  --color-amber-darker2: oklch(from var(--color-amber) calc(l - calc(var(--light-delta-p) * 2)) c h);

  /* purple */
  --color-purple-lighter: hsl(from var(--color-purple) h s calc(l + calc(var(--light-delta) * 2)));
  --color-purple-light: hsl(from var(--color-purple) h s calc(l + var(--light-delta)));
  --color-purple-dark: hsl(from var(--color-purple) h s calc(l - var(--light-delta)));
  --color-purple-darker: hsl(from var(--color-purple) h s calc(l - calc(var(--light-delta) * 2)));

  /* oklch() light/dark experiment */
  --color-purple-lighter2: oklch(from var(--color-purple) calc(l + calc(var(--light-delta-p) * 2)) c h);
  --color-purple-light2: oklch(from var(--color-purple) calc(l + var(--light-delta-p)) c h);
  --color-purple-dark2: oklch(from var(--color-purple) calc(l - var(--light-delta-p)) c h);
  --color-purple-darker2: oklch(from var(--color-purple) calc(l - calc(var(--light-delta-p) * 2)) c h);

  /* green */
  --color-green-lighter: hsl(from var(--color-green) h s calc(l + calc(var(--light-delta) * 2)));
  --color-green-light: hsl(from var(--color-green) h s calc(l + var(--light-delta)));
  --color-green-dark: hsl(from var(--color-green) h s calc(l - var(--light-delta)));
  --color-green-darker: hsl(from var(--color-green) h s calc(l - calc(var(--light-delta) * 2)));

  /* oklch() light/dark experiment */
  --color-green-lighter2: oklch(from var(--color-green) calc(l + calc(var(--light-delta-p) * 2)) c h);
  --color-green-light2: oklch(from var(--color-green) calc(l + var(--light-delta-p)) c h);
  --color-green-dark2: oklch(from var(--color-green) calc(l - var(--light-delta-p)) c h);
  --color-green-darker2: oklch(from var(--color-green) calc(l - calc(var(--light-delta-p) * 2)) c h);

  /* Breakpoints */
  /* Tailwind covers breakpoint-sm: 40rem to -2xl: 96rem as of v4.1.x 202508 JRF */
  --breakpoint-3xl: 120rem;
  /* 1920px */

  /* Containers */
  /* Tailwind covers --container-3xs: 16rem to -7xl: 80rem as of v4.1.x 202508 JRF */

  /* Text Sizes */
  /* Tailwind covers text-xs 0.75rem, -base 1rem, -9xl 8rem by default 202508 JRF */

  /* Font Weights */
  /* Tailwind covers --font-weight-thin 100, -extralight, -light, -normal 400, -medium, -semibold, -bold 700, -extrabold, -black 900 by default 202508 JRF */

  /* Additional items, see docs, link above 
  --tracking-
  --leading-
  --radius-
  --shadow-
  --inset-shadow-
  --drop-shadow-
  --text-shadow-
  --ease-
  --animate-
  */
}